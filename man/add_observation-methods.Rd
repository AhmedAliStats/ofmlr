% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1-onlineLogMixture.R, R/2-multiMixture.R
\docType{methods}
\name{add_observation}
\alias{ANY-method}
\alias{add_observation}
\alias{add_observation,}
\alias{add_observation,multi_online_log_mixture-method}
\alias{add_observation,online_log_mixture-method}
\title{Add an observation}
\usage{
add_observation(object, y, X, ...)

\S4method{add_observation}{online_log_mixture}(object, y, X, lambda = 0.1)

\S4method{add_observation}{multi_online_log_mixture}(object, y, X, ...)
}
\arguments{
\item{object}{An object of type online_log_mixture}

\item{y}{A scalar with value 0 or 1; the dependent variable}

\item{X}{The feature vector of the current observation}

\item{lambda}{The current learn rate. If \code{<=0} than \code{lambda <- n+1000^(-.5)} where \code{n}
is the number of observations}

\item{object}{An object of type online_log_mixture}

\item{y}{A scalar with value 0 or 1; the dependent variable}

\item{X}{The feature vector of the current observation}

\item{lambda}{The current learn rate. If \code{<=0} than \code{lambda <- n+1000^(-.5)} where \code{n}
is the number of observations}
}
\value{
An updated object of type online_log_mixture

An updated object of type multi_online_log_mixture
}
\description{
Generic for adding observations.

The function takes as first argument an initialize model, and subsequently
update the parameters give an observation that is split into y (a 0 or 1 scalar)
and a vector X containing the features. Note that the lenght of X needs to match
the dimensions of the parameters of the current model.

The function takes as first argument an initialized model comparison, and subsequently
update the parameters of each model give an observation that is split into y (a 0 or 1 scalar)
and a vector X containing the features. Note that the lenght of X needs to match
the dimensions of the parameters of the current model.
}
\examples{
M1 <- online_log_mixture(2,4, trace=1)
M1 <- add_observation(M1, 1, c(2,-3))
M1

M2 <- online_log_mixture(2,1, trace=1)
for(i in 1:500){
		X <- runif(2,-2,2)
		y <- rbinom(1, 1, inv_logit(c(2,-2)\%*\%X))
		M2 <- add_observation(M2, y, X, .1)
}
M2

M1 <- online_log_mixture(2,1)
models <- multi_online_log_mixture(M1)
models <- add_model(models, online_log_mixture(2,2))
models <- add_observation(models, 1, c(2,-3))

}

